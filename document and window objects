* Document Object: 
                => The document object represent a web page that is loaded in the browser. 
                => By accessing the document object, we can access the element in the HTML page. 
                => With the help of document objects, we can add dynamic content to our web page. 
                => The document object can be accessed with a window.document or just document.
                => Each window object has a document object to be rendered. 
                => These objects get confused in part because HTML elements are added to the global object when assigned a unique id. 
                   E.g., in the HTML snippet

   <body>
        <p id="holyCow"> This is the first paragraph.</p>
   </body>
the paragraph element can be referenced by any of the following:

--> window.holyCow or window["holyCow"]
--> document.getElementById("holyCow")
--> document.querySelector("#holyCow")
--> document.body.firstChild
--> document.body.children[0]

* Syntax:
document.property_name;

* Window Object: 
                 => The window object is the topmost object of the DOM hierarchy. 
                 => It represents a browser window or frame that displays the contents of the webpage.
                 => Each <iframe> (and deprecated <frame>) element has its own window object too, nested within a parent window. 
                 => whenever a window appears on the screen to display the contents of the document, the window object is created. 
                 => Each of these windows gets its own separate global object.
                
                --> setTimeout() and setInterval() binding event handlers to a timer
                --> location giving the current URL
                --> history with methods back() and forward() giving the tab's mutable history
                --> navigator describing the browser software
Syntax:
window.property_name;
